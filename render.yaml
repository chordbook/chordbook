databases:
  - name: db
    databaseName: chordbook
    user: chordbook
services:
  - type: web
    name: web
    env: static
    buildCommand: yarn build
    staticPublishPath: ./public
    headers:
      - path: /*
        name: X-Frame-Options
        value: sameorigin
    routes:
      # Serve index for all unknown paths
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - fromGroup: public
  - type: web
    name: api
    env: ruby
    buildCommand: "bundle install && bundle exec rake db:migrate"
    startCommand: "bundle exec puma -C config/puma.rb"
    healthCheckPath: /ping
    envVars:
      - fromGroup: public
      - fromGroup: app
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString
  - type: worker
    name: worker
    env: ruby
    buildCommand: "bundle install && yarn install"
    startCommand: bundle exec good_job
    envVars:
      - fromGroup: public
      - fromGroup: app
      - key: DATABASE_URL
        fromDatabase:
          name: db
          property: connectionString
  - type: pserv
    name: elasticsearch
    env: docker
    dockerfilePath: ./elasticsearch/Dockerfile
    dockerContext: ./elasticsearch
    disk:
      name: esdata
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 10
    autoDeploy: false
    envVars:
    - key: ES_JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    - key: discovery.type
      value: single-node
    - key: cluster.name
      value: elastic
  - type: pserv
    name: opensearch
    runtime: image
    image:
      url: opensearchproject/opensearch
    disk:
      name: opensearch-data
      mountPath: /usr/share/opensearch/data
      sizeGB: 10
    autoDeploy: false
    envVars:
    - key: ES_JAVA_OPTS
      value: "-Xms1g -Xmx1g"
    - key: discovery.type
      value: single-node
    - key: cluster.name
      value: opensearch-chordbook
    - key: network.host
      value: "0.0.0.0"
envVarGroups:
  - name: public
    envVars:
      - key: APP_API_URL
        sync: false
      - key: APP_HOSTNAME
        sync: false
      - key: APP_SENTRY_DSN
        sync: false
  - name: app
    envVars:
      - key: RAILS_MASTER_KEY
        sync: false
      - key: ADMIN_USER
        value: admin
      - key: ADMIN_PASS
        generateValue: true
      - key: GOOD_JOB_EXECUTION_MODE
        value: external
      - key: GOOD_JOB_MAX_THREADS
        value: 5
      - key: NODE_ENV
        value: production
      - key: RAILS_ENV
        value: production
      - key: THEAUDIODB_API_KEY
        sync: false
      - key: MAILGUN_API_KEY
        sync: false
      - key: MAILGUN_DOMAIN
        sync: false
      - key: YOUTUBE_API_KEY
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        sync: false
      - key: AWS_BUCKET
        sync: false
      - key: ELASTICSEARCH_URL
        sync: false
      - key: OPENSEARCH_URL
        sync: false
      - key: OPENSEARCH_INITIAL_ADMIN_PASSWORD
        sync: false
